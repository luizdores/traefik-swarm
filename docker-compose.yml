services:
  traefik:
    image: traefik:v3.3.4
    ports:
      # Host mode is essential to work with IPv6
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - target: 80 
        published: 80
        mode: host
        # Uncomment bellow if you have more than on NIC and wants to use it for traefik to listen to, set to the ip of the desired NIC
        # Necessary if you have a VPS with multiple IPs
        # host_ip: IP
      # Listen on port 443, default for HTTPS
      - target: 443
        published: 443
        mode: host
        # Uncomment bellow if you have more than on NIC and wants to use it for traefik to listen to, set to the ip of the desired NIC
        # Necessary if you have a VPS with multiple IPs
        # host_ip: IP
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # SSL Certificates / Certificados SSL
      - traefik-public-certificates:/certificates
      # Traefik Logs / Logs do Traefik
      - /var/log/traefik:/var/log/traefik
      # Traefik Config Folder / Pasta de Configuração do Traefik
      - ./config:/etc/traefik
    environment:
      # Cloudflare API token
      - CF_DNS_API_TOKEN=APIKEY
    labels:
      # Enable Traefik Labels / Labels do Traefik
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.constraint-label=traefik-public"

      # Middleware Basic Auth / Middleware de Basic Auth
      - "traefik.http.middlewares.admin-auth.basicauth.users=USER:PASS"
      
      # Middleware Https Redirect / Middlewate de redirecionamento https
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      
      # Router traefik-public-http 
      - "traefik.http.routers.traefik-public-http.rule=Host(`example.com`)"
      - "traefik.http.routers.traefik-public-http.entrypoints=http"
      - "traefik.http.routers.traefik-public-http.middlewares=https-redirect"
      
      # Router traefik-public-https
      - "traefik.http.routers.traefik-public-https.rule=Host(`example.com`)"
      - "traefik.http.routers.traefik-public-https.entrypoints=https"
      - "traefik.http.routers.traefik-public-https.tls=true"
      - "traefik.http.routers.traefik-public-https.service=api@internal"
      - "traefik.http.routers.traefik-public-https.tls.certresolver=le"
      - "traefik.http.routers.traefik-public-https.middlewares=admin-auth"
      
      # Service traefik-public 
      - "traefik.http.services.traefik-public.loadbalancer.server.port=8080"
    
    deploy:
      resources:
        limits:
          memory: 512M
      update_config:
        order: stop-first
    networks:
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-public

volumes:
  # Create a volume to store the certificates
  traefik-public-certificates:

networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  # If needed other networks can be added
  traefik-public:
    external: true
